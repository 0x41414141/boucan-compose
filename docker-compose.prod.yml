version: "3.3"
services:
  boucan:
    build:
      context: ./../../
      dockerfile: ./infra/docker/boucan.dockerfile
    image: 3lpsy/boucan:latest
    networks:
      boucanpub:
    command: api-server --no-envs --db-setup -l 0.0.0.0 --db-seed-env
    env_file:
      - ${COMPOSE_ENV_DIR}/api.prod.env
    depends_on:
      - db
      - broadcast
  dns:
    image: 3lpsy/boucan:latest
    networks:
      boucanpub:
    command: dns-server -l 0.0.0.0 -p 53 --refresh-ttl 60 --no-ssl-verify
    env_file:
      - ${COMPOSE_ENV_DIR}/dns.prod.env
    restart: on-failure:2
    depends_on:
      - boucan
      - broadcast
      - proxy
    ports:
      - "0.0.0.0:53:53/udp"
      - "0.0.0.0:53:53/tcp"
  http:
    image: 3lpsy/boucan:latest
    networks:
      boucanpub:
    command: dns-server -l 0.0.0.0 -p 80 --no-ssl-verify
    env_file:
      - ${COMPOSE_ENV_DIR}/dns.prod.env
    restart: on-failure:2
    depends_on:
      - boucan
      - broadcast
      - proxy
    ports:
      - "0.0.0.0:80:80/tcp"
  webui:
    build:
      context: ./../../
      dockerfile: ./infra/docker/webui.dockerfile
    image: 3lpsy/boucan-webui:latest
    networks:
      boucanpub:
  proxy:
    build:
      context: ./../proxy
      dockerfile: ./../docker/proxy.dockerfile
    image: 3lpsy/boucan-proxy:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/proxy.prod.env
    ports:
      - "0.0.0.0:8080:8080"
      - "0.0.0.0:8443:8443"
    networks:
      boucanpub:
    volumes:
      - ${TLS_HOST_DIR}/boucan.proxy.docker:/etc/letsencrypt/live/boucan.proxy.docker
    depends_on:
      - webui
      - boucan
  broadcast:
    build:
      context: ./../broadcast
      dockerfile: ./../docker/broadcast.dockerfile
    image: 3lpsy/boucan-broadcast:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/broadcast.prod.env
    networks:
      boucanpub:
    restart: on-failure:5
  db:
    image: postgres:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/db.prod.env
    networks:
      boucanpub:

networks:
  boucanpub:
    # Use a custom driver
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.20.0/24
    driver_opts:
      com.docker.network.bridge.name: bountdnspub0
